#!/bin/bash

#
# Create release package
#
# Usage: wp-package $DIR $VERSION $DESTINATION
# Example: wp-package . 1.0 ~/releases
#
# This creates an optimized .zip package out of a Git managed plugin directory.
#
# - Builds language files
# - Builds assets (Grunt or Gulp)
# - Builds optimized autoloader (Composer)
# - Copies CHANGELOG.md to readme.txt
# - Bumps version in readme.txt, main plugin file and .json files to specified version
# - Creates archive using .gitattributes to ignore development files.
#

PLUGIN_DIRECTORY=$1
VERSION=$2

# Require at least 2 parameters: DIR and VERSION
if [ "$#" -lt 2 ]; then
    echo "At least 2 parameters expected, $# found"
    exit 1;
fi

if [[ ! -d "$PLUGIN_DIRECTORY"  ]]; then
	echo -e "Plugin directory does not exist"
	exit 1;
fi;

# Traverse into plugin directory
cd $PLUGIN_DIRECTORY
PLUGIN_NAME=${PWD##*/}
DEST=${3:-".."}
DEST="$DEST/$PLUGIN_NAME-$VERSION.zip"

# Build all the things, then bump version
if [[ -e "readme.txt" ]]; then
	wp-update-changelog
fi;

dvk-build languages
dvk-build assets
dvk-build autoloader
wp-bump-version $VERSION

# Add untracked changes
if [[ -e ".git" ]]; then
   git add . -A
   git commit -m "v$VERSION"
   git tag "$VERSION"
fi;

# Create zip file, excluding all (development) files that WordPress does not use or need
echo "Creating release package"
cd ..
zip -r "/tmp/$PLUGIN_NAME.zip" $PLUGIN_DIRECTORY \
	-x "$PLUGIN_DIRECTORY/.*" \
	-x "$PLUGIN_DIRECTORY/node_modules/*" \
	-x "$PLUGIN_DIRECTORY/tests/*" \
	-x "$PLUGIN_DIRECTORY/*/sass/*" \
	-x "$PLUGIN_DIRECTORY/*/browserify/*" \
	-x "$PLUGIN_DIRECTORY/*.json" \
	-x "$PLUGIN_DIRECTORY/phpunit.xml*" \
	-x "$PLUGIN_DIRECTORY/gulpfile.js" \
	-x "$PLUGIN_DIRECTORY/webpack.config*.js" \
	-x "$PLUGIN_DIRECTORY/README.md" \
	-x "$PLUGIN_DIRECTORY/composer.lock" \
	-x "$PLUGIN_DIRECTORY/codesniffer.xml" \
	-x "$PLUGIN_DIRECTORY/build/*" \
	-x "$PLUGIN_DIRECTORY/assets/src/*" \
	-x "$PLUGIN_DIRECTORY/code-snippets" \
	-x "$PLUGIN_DIRECTORY/**/node_modules/*"

# Move to destination directory
mv "/tmp/$PLUGIN_NAME.zip" "$DEST"
echo "$DEST"

# Push to GitHub
cd "$PLUGIN_DIRECTORY"
if [[ -e ".git" ]]; then
	git push origin master
	git push origin "tags/$VERSION"
fi;